package com.ecommerce.orderservice.order;

import com.ecommerce.orderservice.orderline.OrderLine;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EntityListeners;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import org.springframework.data.annotation.CreatedDate;
import org.springframework.data.annotation.LastModifiedDate;
import org.springframework.data.jpa.domain.support.AuditingEntityListener;

/**
 * Represents a customer order in the e-commerce system.
 * <br>
 * Each Order may contain multiple {@link OrderLine} items representing
 * the products being purchased.
 * <br>
 * The Order entity stores important details such as total amount, payment method,
 * customer reference, and audit timestamps.
 */
@AllArgsConstructor
@Builder
@Getter
@Setter
@Entity
@EntityListeners(AuditingEntityListener.class)
@NoArgsConstructor
@Table(name = "customer_order")
public class Order {

    /**
     * The primary key for this Order.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue
    private Integer id;

    /**
     * A unique reference number for this order (exposed to customers, e.g., "ORD12345").
     * Must be unique and non-null.
     */
    @Column(unique = true, nullable = false)
    private String reference;

    /**
     * The total monetary value of the order.
     */
    private BigDecimal totalAmount;

    /**
     * The method used by the customer to pay for this order.
     * Stored as an enum string.
     */
    @Enumerated(EnumType.STRING)
    private PaymentMethod paymentMethod;

    /**
     * The ID of the customer placing this order.
     * Typically, references the customer system or user table.
     */
    private String customerId;

    /**
     * The list of line items (products) included in this order.
     * Mapped using a One-to-Many relationship.
     */
    @OneToMany(mappedBy = "order")
    private List<OrderLine> orderLines;

    /**
     * The date and time when the order was created.
     * Automatically populated by the auditing system.
     */
    @CreatedDate
    @Column(updatable = false, nullable = false)
    private LocalDateTime createdDate;

    /**
     * The date and time when the order was last modified.
     * Automatically updated by the auditing system.
     */
    @LastModifiedDate
    @Column(insertable = false)
    private LocalDateTime lastModifiedDate;
}
